---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/ListPosts'
import ListCategories from '@/components/ListCategories'
import TitlePage from '@/components/TitlePage'
import Pagination from '@/components/Pagination'
import { fetchArticles, fetchCategories } from 'src/utils/fetchApiData'

let currentPage = 1
let totalPages = 1

const categoriesData = await fetchCategories()
const currentCategory =
	categoriesData.data.find((category) => category.attributes.slug === Astro.params.category)
		?.attributes.name || ''

const articles = (await fetchArticles(currentPage, 10)).data.map((article) => {
	return article
})

const filteredArticles = categoriesData.data
	.map((category) => {
		const currentPath = Astro.url.pathname
		const categoryName = category.attributes.name
		const categorySlug = category.attributes.slug

		const matchingArticles = articles.filter(
			(article) =>
				article.attributes.category.data.attributes.name === categoryName &&
				currentPath.includes(categorySlug)
		)

		return matchingArticles.length > 0 ? matchingArticles : null // Return null if no matching articles found
	})
	.filter((articles) => articles !== null) // Filter out null entries from the result
---

<BaseLayout title={currentCategory}>
	<TitlePage title={currentCategory} />
	<ListCategories categoriesData={categoriesData} />
	<ListPosts articles={filteredArticles[0]} />
	<Pagination isCategory={true} pagination={'asdasd'} categorySlug='slug' />
</BaseLayout>
