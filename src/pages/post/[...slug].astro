---
import BlogPost from '@/layouts/BlogPost'
import Code from '@/components/mdx/Code'
import ListRelatedPosts from '@/components/ListRelatedPosts'
import Share from '@/components/Share'
import TableOfContents from '@/components/TableOfContents'
import SButton from '@/components/mdx/SButton'
import Disqus from '@/components/Disqus'
import { disqusConfig } from '@/data/disqus.config'
// import {} from 'src/utils/fetchApiData'
import { fetchArticlesData } from 'src/utils/fetchApiData'

// export async function getStaticPaths() {
// 	// This function determines the path of the article that will be generated at build time.
// 	const posts = await getPosts()
// 	return posts.map((post) => ({
// 		params: { slug: post.slug },
// 		props: post
// 	}))
// }
// type Props = CollectionEntry<'blog'>

// const getRelatedPosts = (post: Props) => {
// 	const lowercaseTags = post.data.tags.map((tag: string) => tag.toLowerCase())
// 	const relatedPosts = posts.filter(
// 		(p) =>
// 			p.slug !== post.slug &&
// 			p.data.tags.some((t: string) => lowercaseTags.includes(t.toLowerCase()))
// 	)
// 	return relatedPosts.slice(0, MAX_POSTS)
// }

// const relatedPosts = getRelatedPosts(post)

// const { Content, headings, remarkPluginFrontmatter } = await post.render()

const disqusEnabled = disqusConfig.enabled

export async function getStaticPaths() {
	const allArticles = await fetchArticlesData()

	return allArticles.map((article) => ({
		params: { slug: article.attributes.slug },
		props: article
		// revalidate: 60
	}))
}
const article = Astro.props.attributes
const articleID = Astro.props.id
---

<BlogPost id={articleID} data={article}>
	<div class='grid grid-cols-1 md:grid-cols-[20%_auto] gap-10 mt-8'>
		<!-- aside  -->
		<!-- <aside class='md:flex flex-col gap-8 hidden'>
			<Share />
			<div class='sticky top-24 self-start hidden md:block transition-all duration-200'>
				{headings && headings.length > 0 && <TableOfContents {headings} />}
			</div>
		</aside> -->

		<!-- post -->
		<article class='max-w-full w-full'>
			<div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full'>
				<!-- <Content components={{ pre: Code, SButton }} /> -->
			</div>
			<!-- <ArticleView /> -->
			<!-- related posts -->
			<footer>
				<h2 class='font-bold text-lg dark:text-white mb-6'>Related Posts</h2>
				<!-- <ListRelatedPosts posts={relatedPosts} /> -->
			</footer>
		</article>
	</div>

	<!-- {disqusEnabled && <Disqus />} -->
</BlogPost>
