---
import BlogPost from '@/layouts/BlogPost'
import fetchApi from 'src/lib/strapi'
import { marked } from 'marked'
import * as DOMPurify from 'dompurify'
import { Debug } from 'astro:components'
import { documentToHtmlString } from '@contentful/rich-text-html-renderer'

const { slug } = Astro.params
let article: SingleArticleData
try {
	article = await fetchApi<SingleArticleData>({
		endpoint: 'articles/' + slug,
		query: {
			populate: '*'
		}
	})
} catch (error) {
	return Astro.redirect('/404')
}

const markdownBlock = marked.parse(article.data.attributes.RichTextEditor)

// const markdownContent = markdownBlocks.map((res) => {
// 	// return DOMPurify.sanitize(marked.parse(res.body))
// 	const singleBlock = marked.parse(res.body.replace(/\n/gi, '<br />'))
// 	return singleBlock
// })
---

<>
	<BlogPost data={article.data.attributes}>
		<article class='max-w-full w-full text-md md:text-lg lg:text-xl' set:html={markdownBlock} />
	</BlogPost>
</>
