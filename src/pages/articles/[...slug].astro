---
import BlogPost from '@/layouts/BlogPost'
import fetchApi from 'src/lib/strapi'
import { marked } from 'marked'
import * as DOMPurify from 'dompurify'

const { slug } = Astro.params
let article: SingleArticleData
try {
	article = await fetchApi<SingleArticleData>({
		endpoint: 'articles/' + slug,
		query: {
			populate: '*'
		}
	})
} catch (error) {
	return Astro.redirect('/404')
}

const markdownBlocks = article.data.attributes.blocks

const markdownContent = markdownBlocks.map((res) => {
	// return DOMPurify.sanitize(marked.parse(res.body))
	const singleBlock = marked.parse(res.body)
	// const response = DOMPurify.sanitize(singleBlock)
	return singleBlock
})
---

<BlogPost data={article.data.attributes}>
	<article class='max-w-full w-full' set:html={markdownContent}>
		<!-- <div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full'> -->
		<!-- <Content components={{ pre: Code, SButton }} /> -->
		<!-- </div> -->
		<!-- <ArticleView /> related posts -->
	</article>
</BlogPost>
